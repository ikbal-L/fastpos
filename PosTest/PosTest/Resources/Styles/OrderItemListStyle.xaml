<ResourceDictionary x:Uid="ResourceDictionary_1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:local="clr-namespace:PosTest.Converters"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:src="clr-namespace:ServiceInterface.Model;assembly=ServiceInterface">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary x:Uid="ResourceDictionary_2" Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <BooleanToVisibilityConverter x:Uid="BooleanToVisibilityConverter_1" x:Key="BoolToVisibility"/>
    <local:ObjectToVisibilityConverter x:Uid="local:ObjectToVisibilityConverter_1" x:Key="ObjectToVisibility"/>
    <local:OrderItemObjectToVisibilityConverter x:Uid="local:OrderItemObjectToVisibilityConverter_1" x:Key="OrderItemToVisibility"/>
    <local:OrderStateEnumToBrushConverter x:Uid="local:OrderStateEnumToBrushConverter_1" x:Key="OrderStateEnumToBrush"/>
    <local:OrderTypeEnumToMaterialDesignIcon x:Uid="local:OrderTypeEnumToMaterialDesignIcon_1" x:Key="OrderTypeEnumToMaterialDesignIcon"/>
    <local:ObjectToBoolConverter   x:Uid="local:ObjectToBoolConverter_1" x:Key="ObjectToBoolConverter"/>

    <Style x:Uid="Style_1" TargetType="{x:Type ListBoxItem}" x:Key="OrderItems_ItemStyle" >
        <Setter x:Uid="Setter_1" Property="Margin" Value="0"/>
        <Setter x:Uid="Setter_2" Property="Foreground" Value="Black"/>
        <Setter x:Uid="Setter_3" Property="Margin" Value="0"/>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_1" Property="ItemsControl.AlternationIndex" Value="0">
                <Setter x:Uid="Setter_4" Property="Background" Value="White"></Setter>
            </Trigger>
            <Trigger x:Uid="Trigger_2" Property="ItemsControl.AlternationIndex" Value="1">
                <Setter x:Uid="Setter_5" Property="Background" Value="#cae9ff"></Setter>
            </Trigger>
            <Trigger x:Uid="Trigger_3" Property="IsSelected" Value="True">
                <Setter x:Uid="Setter_6" Property="Foreground" Value="Black"/>
                <Setter x:Uid="Setter_7" Property="FontWeight" Value="Bold"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Uid="Style_2" TargetType="{x:Type ListBoxItem}" x:Key="SplittedOrderItems_ItemStyle" >
        <Setter x:Uid="Setter_8" Property="Margin" Value="1"/>
        <Setter x:Uid="Setter_9" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_1" TargetType="{x:Type ListBoxItem}">
                    <Border x:Uid="Border" Name="Border" BorderThickness="1" CornerRadius="3" Padding="1" BorderBrush="Black">
                        <ContentPresenter x:Uid="ContentPresenter_1" DockPanel.Dock="Bottom" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_4" Property="IsSelected" Value="True">
                            <Setter x:Uid="Setter_10" TargetName="Border" Property="BorderBrush" Value="Red"/>
                            <Setter x:Uid="Setter_11" TargetName="Border" Property="Background" Value="Beige"/>
                            <Setter x:Uid="Setter_12" TargetName="Border" Property="TextBlock.FontSize" Value="13" />
                            <Setter x:Uid="Setter_13" TargetName="Border" Property="TextBlock.FontWeight" Value="Bold" />
                            <Setter x:Uid="Setter_14" TargetName="Border" Property="BorderThickness" Value="2" />
                        </Trigger>
                        <MultiTrigger x:Uid="MultiTrigger_1">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_1" Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_15" Property="Background" TargetName="Border" Value="AliceBlue"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                <Setter Property="Margin" Value="0 15 0 0" />
            </DataTrigger>
        </Style.Triggers>-->
    </Style>

    <DataTemplate x:Uid="DataTemplate_1" DataType="{x:Type src:Order}" x:Key="OrderButtonList_ItemTemplate">
        <Button x:Uid="Button_1" MinWidth="80" Padding="5 0 5 0" BorderThickness="0" FontWeight="Bold" Height="28"
                cal:Message.Attach="[Event Click] = [Action ShowOrder($this)]"
                Background="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
            <StackPanel x:Uid="StackPanel_1" Orientation="Horizontal" >
                <Border x:Uid="Border_1" CornerRadius="90" Background="Gray" Height="20" Width="20" Margin="0 0 2 0" >
                    <TextBlock x:Uid="TextBlock_1" FontWeight="Bold" FontSize="12"  Text="{Binding Table.Number}" HorizontalAlignment="Center"/>
                </Border>
                <TextBlock x:Uid="TextBlock_2" Text="{Binding ElapsedTime.Minutes}"/>
            </StackPanel>
        </Button>
    </DataTemplate>

    <Style x:Uid="Style_3" TargetType="{x:Type ListBoxItem}" x:Key="OrderButtonList_ItemStyle">
        <Setter x:Uid="Setter_16" Property="Background" Value="LightBlue"/>
        <Setter x:Uid="Setter_17" Property="Foreground" Value="White"/>
        <Setter x:Uid="Setter_18" Property="FontWeight" Value="Bold"/>
        <Setter x:Uid="Setter_19" Property="FontSize" Value="12"/>
        <!--<Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>-->
        <Style.Triggers>
            <Trigger x:Uid="Trigger_5" Property="IsSelected" Value="True">
                <Setter x:Uid="Setter_20" Property="Background" Value="Green"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
    </Style>-->

</ResourceDictionary>