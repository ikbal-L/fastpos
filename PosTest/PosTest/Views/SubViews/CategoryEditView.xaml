<UserControl x:Class="PosTest.Views.SubViews.CategoryEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:PosTest.Views.SubViews"
             xmlns:slcontrole="clr-namespace:PosTest.SL.Controls"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"

             xmlns:cal="http://www.caliburnproject.org"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:PosTest.Converters">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />

            </ResourceDictionary.MergedDictionaries>
            <converters:SolidColorBrushToBrushConverter x:Key="scbtobrush" />
            <converters:NegateBooleanValueConverter x:Key="NegateBooleanValueConverter" />

            <Style  TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="Foreground" Value="#333333" />
                <Setter Property="MaxLength" Value="40" />
                <Setter Property="Width" Value="392" />
                <!--<Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
                                Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                </Style.Triggers>-->

                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000"
                                    IsHitTestVisible="False" x:Name="errorBorder" />
                                <AdornedElementPlaceholder x:Name="placeholder" />
                                <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0"
                                   VerticalOffset="0" PopupAnimation="Fade" Placement="Right"
                                   PlacementTarget="{Binding ElementName=errorBorder}"
                                   IsOpen="{Binding ElementName=placeholder, Path=AdornedElement.IsFocused, Mode=OneWay}">
                                    <StackPanel Orientation="Horizontal">
                                        <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCC2E2E"
                                             Stretch="Fill" Stroke="#FFCB2E2E"
                                             StrokeThickness="2" />
                                        <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                            <ItemsControl ItemsSource="{Binding}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Center" Foreground="White"
                                                               FontWeight="Bold" Margin="2,0,0,0"
                                                               Text="{Binding ErrorContent}"  />
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </Border>
                                    </StackPanel>
                                </Popup>
                            </Grid>
                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                </Style.Triggers>


            </Style>
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <StackPanel Margin="20" Width="600">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="7*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Label Grid.Row="0" Grid.Column="0" Content="Edit Category" Background="AliceBlue" Grid.ColumnSpan="2" />

            <Label Grid.Row="1" Grid.Column="0" Content="Name" />
            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding EditCategoryViewModel.Name,Mode=TwoWay}"
                     x:Name="NameField"  >
            </TextBox>

            <Label Grid.Row="2" Grid.Column="0" Content="Description" />
            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding EditCategoryViewModel.Description}" />

            <Label Grid.Row="3" Grid.Column="0" Content="Color" />
            <Grid Grid.Row="3" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="8*" />
                </Grid.ColumnDefinitions>
                <Rectangle Grid.Column="0" Fill="{Binding EditCategoryViewModel.Category.BackGroundColor}" />
                <!--<materialDesign:ColorPicker Grid.Column="1" Color="{Binding CurrentCategory.BackgroundColor}" />-->
                <slcontrole:ColorPalette Grid.Column="1"
                                         CPColorBrush="{Binding EditCategoryViewModel.Category.Background,Converter={StaticResource scbtobrush}}" />

            </Grid>

        </Grid>

        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <Button Style="{StaticResource MaterialDesignFlatButton}" DataContext="{Binding EditCategoryViewModel}"
                    IsDefault="True"
                    Margin="0 8 8 0"
                    cal:Message.Attach="[Event Click] = [Action SaveCategory()]"
                    Content="SAVE"
                    IsEnabled="{Binding IsSaveEnabled}"/>
            <Button Style="{StaticResource MaterialDesignFlatButton}"
                    IsCancel="True"
                    Margin="0 8 8 0"
                    cal:Message.Attach="[Event Click] = [Action Cancel()]"
                    DataContext="{Binding EditCategoryViewModel}"
                    Content="CANCEL" />
        </StackPanel>
    </StackPanel>
</UserControl>