<UserControl x:Class="FastPosFrontend.Views.CheckoutSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:caliburn="http://www.caliburnproject.org"
             xmlns:models="clr-namespace:ServiceInterface.Model;assembly=ServiceInterface"
             xmlns:materialdesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:ex="clr-namespace:FastPosFrontend.Extensions"
             xmlns:subviews="clr-namespace:FastPosFrontend.Views.SubViews"
             xmlns:converters="clr-namespace:FastPosFrontend.Converters"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:subViews="clr-namespace:FastPosFrontend.Views.SubViews"
             xmlns:viewModels="clr-namespace:FastPosFrontend.ViewModels"
             xmlns:helpers="clr-namespace:FastPosFrontend.Helpers"

             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="800">
    <UserControl.Resources>
        <DataTemplate DataType="{x:Type models:Product}" x:Key="textBlockTempl">
            <Grid Width="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=ActualWidth}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0.5*" />
                </Grid.ColumnDefinitions>
                <ToggleButton x:Name="checkToggle" Grid.Column="0"
                              VerticalAlignment="Center" Height="22" Width="22"
                              IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, 
                                              AncestorType={x:Type ListBoxItem}}, Path=IsSelected}">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton"
                               BasedOn="{StaticResource MaterialDesignActionLightToggleButton}">
                            <Setter Property="Background" Value="#90e0ef" />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}" />
                                    <Setter Property="Foreground" Value="#ffffff" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <TextBlock Grid.Column="1" FontWeight="Bold" Text="{Binding Name}" Margin="5 0 0 0"
                           VerticalAlignment="Center" />
                <TextBlock Grid.Column="2" FontWeight="Bold" Text="{Binding Category.Name}" VerticalAlignment="Center" />
                <TextBlock Grid.Column="3" FontWeight="Bold" Text="{Binding Price}" HorizontalAlignment="Right"
                           Margin="0 0 5 0" VerticalAlignment="Center" />
                <Border Grid.Column="4" Background="{Binding Background}" Height="15" />
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type models:Product}" x:Key="TextBoxTempl">
            <DockPanel LastChildFill="False">
                <Grid DockPanel.Dock="Top"
                      Width="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=ActualWidth}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="0.5*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>
                    <ToggleButton x:Name="checkToggle" Grid.Column="0" Grid.Row="1"
                                  VerticalAlignment="Center" Height="22" Width="22"
                                  IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, 
                                  AncestorType={x:Type ListBoxItem}}, Path=IsSelected}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton"
                                   BasedOn="{StaticResource MaterialDesignActionLightToggleButton}">
                                <Setter Property="Background" Value="#90e0ef" />
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}" />
                                        <Setter Property="Foreground" Value="#ffffff" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <TextBox x:Name="NameTxtBox" Grid.Column="1" FontWeight="Bold" Text="{Binding Name}"
                             Panel.ZIndex="2"
                             caliburn:Message.Attach="[Event TextChanged] = [Action ProductChanged($this)]"
                             Visibility="{Binding ElementName=checkToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                             Margin="4 2 0 0" />
                    <ComboBox Grid.Column="2" Text="{Binding Category.Name}" materialdesign:HintAssist.Hint="Category"
                              FontWeight="Bold"
                              caliburn:Message.Attach="[Event TextChanged] = [Action ProductChanged($this)]"
                              Visibility="{Binding ElementName=checkToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                              ItemsSource="{Binding ElementName=CategoriesTabItem, Path=Tag, FallbackValue=Category}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type models:Category}">
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBox Grid.Column="3" Text="{Binding Price}" HorizontalAlignment="Right" Margin="0 1 5 0"
                             caliburn:Message.Attach="[Event TextChanged] = [Action ProductChanged($this)]"
                             Visibility="{Binding ElementName=checkToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <Border Grid.Column="4" Background="{Binding Background}" Height="15" />
                </Grid>
                <Button DockPanel.Dock="Right" Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="1"
                        caliburn:Message.Attach="[Event Click] = [Action ProductChanged($this)]"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        Content="{materialdesign:PackIcon Kind=Disc, Size=30}" />
                <Button DockPanel.Dock="Right" Grid.Column="2" Grid.Row="1"
                        Height="35"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        Content="{materialdesign:PackIcon Kind=ContentSave, Size=30}" />
            </DockPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type models:Category}" x:Key="freeCategoryListItemTemplate">
            <Grid Width="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=ActualWidth}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0.5*" />
                </Grid.ColumnDefinitions>
                <ToggleButton x:Name="checkToggle" Grid.Column="0"
                              VerticalAlignment="Center" Height="22" Width="22"
                              IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, 
                                              AncestorType={x:Type ListBoxItem}}, Path=IsSelected}">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton"
                               BasedOn="{StaticResource MaterialDesignActionLightToggleButton}">
                            <Setter Property="Background" Value="#90e0ef" />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}" />
                                    <Setter Property="Foreground" Value="#ffffff" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <TextBlock Grid.Column="1" FontWeight="Bold" Text="{Binding Name}" Margin="5 0 0 0"
                           VerticalAlignment="Center" />
                <Border Grid.Column="4" Background="{Binding Background}" Height="15" />
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type models:Category}" x:Key="freeCategoryListSelectedItemTemplate">
            <DockPanel LastChildFill="False">
                <Grid DockPanel.Dock="Top"
                      Width="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=ActualWidth}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="0.5*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>
                    <ToggleButton x:Name="checkToggle" Grid.Column="0" Grid.Row="1"
                                  VerticalAlignment="Center" Height="22" Width="22"
                                  IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, 
                                  AncestorType={x:Type ListBoxItem}}, Path=IsSelected}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton"
                                   BasedOn="{StaticResource MaterialDesignActionLightToggleButton}">
                                <Setter Property="Background" Value="#90e0ef" />
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}" />
                                        <Setter Property="Foreground" Value="#ffffff" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <TextBox x:Name="NameTxtBox" Grid.Column="1" FontWeight="Bold" Text="{Binding Name}"
                             Panel.ZIndex="2"
                             caliburn:Message.Attach="[Event TextChanged] = [Action ProductChanged($this)]"
                             Visibility="{Binding ElementName=checkToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                             Margin="4 2 0 0" />

                    <ComboBox Grid.Column="2" Text="{Binding Category.Name}" materialdesign:HintAssist.Hint="Category"
                              FontWeight="Bold"
                              caliburn:Message.Attach="[Event TextChanged] = [Action ProductChanged($this)]"
                              Visibility="{Binding ElementName=checkToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                              ItemsSource="{Binding ElementName=CategoriesTabItem, Path=Tag, FallbackValue=Category}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type models:Category}">
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBox Grid.Column="3" Text="{Binding Price}" HorizontalAlignment="Right" Margin="0 1 5 0"
                             caliburn:Message.Attach="[Event TextChanged] = [Action ProductChanged($this)]"
                             Visibility="{Binding ElementName=checkToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <Border Grid.Column="4" Background="{Binding Background}" Height="15" />
                </Grid>
                <Button DockPanel.Dock="Right" Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="1"
                        caliburn:Message.Attach="[Event Click] = [Action ProductChanged($this)]"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        Content="{materialdesign:PackIcon Kind=Disc, Size=30}" />
                <Button DockPanel.Dock="Right" Grid.Column="2" Grid.Row="1"
                        Height="35"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        Content="{materialdesign:PackIcon Kind=ContentSave, Size=30}" />
            </DockPanel>
        </DataTemplate>
        <converters:BooleanToHiddenVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:TypeToIntegerIndexValueConverter x:Key="TypeToIntegerIndexValueConverter" />
        <converters:LessThanValueConverter x:Key="LessThanValueConverter" />
        <DataTemplate x:Key="ProductDisplayLayoutTemplate" />
        <DataTemplate x:Key="CategoryTabItemHeaderTemplate">
            <materialdesign:Badged BadgePlacementMode="Right">

                <materialdesign:Badged.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Value="true">

                                <DataTrigger.Binding>
                                    <Binding RelativeSource="{RelativeSource AncestorType=TabItem}"
                                             Path="DataContext.(viewModels:CheckoutSettingsViewModel.FreeCategories).Count"
                                             Converter="{StaticResource NotZeroConverter}" />
                                </DataTrigger.Binding>
                                <Setter Property="materialdesign:Badged.BadgeBackground"
                                        Value="{StaticResource ErrorColorBrush}" />
                                <Setter Property="materialdesign:Badged.BadgeForeground" Value="White" />
                                <Setter Property="materialdesign:Badged.Badge">
                                    <Setter.Value>
                                        <Binding RelativeSource="{RelativeSource AncestorType=TabItem}"
                                                 Path="DataContext.(viewModels:CheckoutSettingsViewModel.FreeCategories).Count" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </materialdesign:Badged.Style>
                <TextBlock Text="Categories" Margin=" 5 5 20 5" />

            </materialdesign:Badged>
        </DataTemplate>
        <DataTemplate x:Key="ProductTabItemHeaderTemplate">
            <materialdesign:Badged BadgePlacementMode="Right">
                <materialdesign:Badged.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Value="true">

                                <DataTrigger.Binding>
                                    <Binding RelativeSource="{RelativeSource AncestorType=TabItem}"
                                             Path="DataContext.(viewModels:CheckoutSettingsViewModel.FreeProducts).Count"
                                             Converter="{StaticResource NotZeroConverter}" />
                                </DataTrigger.Binding>
                                <Setter Property="materialdesign:Badged.BadgeBackground"
                                        Value="{StaticResource ErrorColorBrush}" />
                                <Setter Property="materialdesign:Badged.BadgeForeground" Value="White" />
                                <Setter Property="materialdesign:Badged.Badge">
                                    <Setter.Value>
                                        <Binding RelativeSource="{RelativeSource AncestorType=TabItem}"
                                                 Path="DataContext.(viewModels:CheckoutSettingsViewModel.FreeProducts).Count" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </materialdesign:Badged.Style>


                <TextBlock Text="Products" Margin=" 5 5 20 5" />

            </materialdesign:Badged>
        </DataTemplate>
    </UserControl.Resources>

    <materialdesign:DialogHost DialogTheme="Inherit" IsOpen="{Binding IsDialogOpen}" CloseOnClickAway="True">
        <materialdesign:DialogHost.DialogContent>
            <StackPanel Orientation="Vertical">
                <StackPanel Orientation="Horizontal" Height="60" Margin="10 10 10 0">
                    <TextBox Width="100" materialdesign:HintAssist.Hint="Columns"
                             Style="{StaticResource MaterialDesignOutlinedTextFieldTextBox}"
                             Margin="10" Text="{Binding ProductLayout.Columns}" />
                    <TextBox Width="100" materialdesign:HintAssist.Hint="Rows"
                             Style="{StaticResource MaterialDesignOutlinedTextFieldTextBox}"
                             Margin="10" Text="{Binding ProductLayout.Rows}" />

                </StackPanel>
                <StackPanel Margin="10  10">
                    <Button Style="{StaticResource MaterialDesignFlatButton}"
                            caliburn:Message.Attach="[Event Click] = [Action ApplyLayoutConfig()]">
                        Apply
                    </Button>
                </StackPanel>
            </StackPanel>

        </materialdesign:DialogHost.DialogContent>

        <Grid>
            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="360" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <materialdesign:Snackbar Grid.ColumnSpan="2" MessageQueue="{Binding MessageQueue}" Panel.ZIndex="1"
                                         HorizontalAlignment="Center" VerticalAlignment="Top" />

                <TabControl
                    Style="{StaticResource MaterialDesignTabControl}"
                    SelectedIndex="{Binding ActiveTab,Mode=TwoWay,Converter={StaticResource TypeToIntegerIndexValueConverter}}"
                    caliburn:Message.Attach="[Event DragEnter] = [Action SetActiveTab($source, $eventArgs)]">
                    <TabItem x:Name="CategoriesTabItem" Tag="{Binding AllCategories}" TabIndex="0"
                             HeaderTemplate="{StaticResource CategoryTabItemHeaderTemplate}">

                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"
                                      Padding="5">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <ListBox x:Name="FreeCategorySettingsList" ItemsSource="{Binding FreeCategories}"
                                         SelectedItem="{Binding SelectedFreeCategory}"
                                         Grid.IsSharedSizeScope="True" AllowDrop="True"
                                         caliburn:Message.Attach="[Event MouseMove] = [Action FreeCategoriesList_MouseMove($source, $eventArgs)];
                                                              [Event Drop] = [Action FreeCategoriesList_Drop($source, $eventArgs)];
                                         [Event TouchDown] = [Action FreeCategoriesList_TouchDown($source, $eventArgs)];">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type models:Category}">
                                            <ContentControl x:Name="cc" Content="{Binding}"
                                                            ContentTemplate="{DynamicResource freeCategoryListItemTemplate}" />
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                                    <Setter TargetName="cc" Property="ContentTemplate"
                                                            Value="{DynamicResource freeCategoryListSelectedItemTemplate}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <materialdesign:ColorZone Grid.Row="1" Mode="PrimaryMid">
                                    <TextBlock Margin="16">Gestion Des Categories</TextBlock>
                                </materialdesign:ColorZone>
                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                        VerticalAlignment="Bottom" HorizontalAlignment="Right" Grid.Row="0"
                                        Margin="0 0 10 -20"
                                        caliburn:Message.Attach="[Event Click] = [Action DeleteCategory]">
                                    <materialdesign:PackIcon Kind="Delete" Height="22" Width="22" />
                                </Button>
                            </Grid>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource ProductTabItemHeaderTemplate}" TabIndex="1">

                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"
                                      Padding="5">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ListBox x:Name="FreeProductSettingsList" ItemsSource="{Binding FreeProducts}"
                                         SelectedItem="{Binding SelectedFreeProduct}"
                                         Grid.IsSharedSizeScope="True" AllowDrop="True"
                                         caliburn:Message.Attach="[Event PreviewMouseLeftButtonDown] = [Action FreeProductsList_PreviewMouseLeftButtonDown($source, $eventArgs)];
                                                              [Event MouseMove] = [Action FreeProductsList_MouseMove($source, $eventArgs)];
                                                              [Event DragEnter] = [Action ProductsList_DragEnter($source, $eventArgs)];
                                                              [Event Drop] = [Action FreeProductsList_Drop($source, $eventArgs)];
                                                              [Event TouchDown] = [Action FreeProductsList_TouchDown($source, $eventArgs)];">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type models:Product}">
                                            <ContentControl x:Name="cc" Content="{Binding}"
                                                            ContentTemplate="{DynamicResource textBlockTempl}" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <materialdesign:ColorZone Mode="PrimaryMid" Grid.Row="1">
                                    <TextBlock Margin="16">Gestion Des Produits</TextBlock>
                                </materialdesign:ColorZone>


                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                        VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                        Grid.Row="0" Margin="0 0 10 -20"
                                        caliburn:Message.Attach="[Event Click] = [Action DeleteProduct]">
                                    <materialdesign:PackIcon Kind="Delete" Height="22" Width="22" />
                                </Button>
                            </Grid>

                        </ScrollViewer>
                    </TabItem>
                </TabControl>

                <ScrollViewer Grid.Column="1" HorizontalScrollBarVisibility="Disabled"
                              VerticalScrollBarVisibility="Disabled" Padding="3.3">
                    <materialdesign:Flipper IsFlipped="{Binding IsFlipped}"
                                            Style="{StaticResource MaterialDesignCardFlipper}">
                        <materialdesign:Flipper.FrontContent>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Disabled"
                                              VerticalScrollBarVisibility="Disabled">
                                    <DockPanel>
                                        <DockPanel.Style>
                                            <Style TargetType="DockPanel">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Value="true">
                                                        <DataTrigger.Binding>
                                                            <Binding Path="ProductLayout.Rows"
                                                                     Converter="{StaticResource LessThanValueConverter}"
                                                                     ConverterParameter="4" />
                                                        </DataTrigger.Binding>
                                                        <Setter Property="LastChildFill" Value="False" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DockPanel.Style>

                                        <Grid DockPanel.Dock="Bottom" VerticalAlignment="Top">
                                            <materialdesign:ColorZone Mode="PrimaryMid" Grid.Row="0"
                                                                      VerticalAlignment="Bottom">
                                                <TextBlock Margin="16">Gestion Du Menu Produits</TextBlock>
                                            </materialdesign:ColorZone>

                                            <Button
                                                Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                                Grid.Row="0" Margin="0 0 10 5"
                                                caliburn:Message.Attach="[Event Click] = [Action CreateProduct()]">
                                                <materialdesign:PackIcon Kind="Plus" Height="22" Width="22" />
                                            </Button>

                                            <Button
                                                Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                                Grid.Row="0" Margin="0 0 60 5"
                                                caliburn:Message.Attach="[Event Click] = [Action EditProduct()]">
                                                <materialdesign:PackIcon Kind="Edit" Height="22" Width="22" />
                                            </Button>
                                            <Button x:Name="MoveButton"
                                                    Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                    caliburn:Message.Attach="[Event Click] = [Action MoveProductTo()]"
                                                    VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                                    Grid.Row="0" Margin="0 0 110 5"
                                                    Tag="{Binding ProductToMove}">
                                                <materialdesign:PackIcon Kind="ArrowExpandAll" Height="22" Width="22" />
                                            </Button>
                                            <Button
                                                Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                caliburn:Message.Attach="[Event Click] = [Action PasteProduct()]"
                                                VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                                Grid.Row="0" Margin="0 0 160 5">
                                                <materialdesign:PackIcon Kind="ContentPaste" Height="22" Width="22" />
                                            </Button>
                                            <Button
                                                Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                caliburn:Message.Attach="[Event Click] = [Action CopyProduct()]"
                                                VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                                Grid.Row="0" Margin="0 0 210 5">
                                                <materialdesign:PackIcon Kind="ContentCopy" Height="22" Width="22" />
                                            </Button>
                                            <Button
                                                Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                caliburn:Message.Attach="[Event Click] = [Action RemoveProductFromCategory()]"
                                                VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                                Grid.Row="0" Margin="0 0 260 5">
                                                <materialdesign:PackIcon Kind="Delete" Height="22" Width="22" />
                                            </Button>

                                            <Button
                                                Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                caliburn:Message.Attach="[Event Click] = [Action ConfigureProductDisplayLayout()]"
                                                VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                                Grid.Row="0" Margin="0 0 310 5">
                                                <materialdesign:PackIcon Kind="Grid" Height="22" Width="22" />
                                            </Button>
                                        </Grid>
                                        <ListBox x:Name="ProductSettingsList" ItemsSource="{Binding CurrentProducts}"
                                                 Margin="2"
                                                 AllowDrop="True"
                                                 ItemTemplate="{StaticResource SettingsProduct}"
                                                 SelectedItem="{Binding SelectedProduct}"
                                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                                 caliburn:Message.Attach="[Event DragEnter] = [Action ProductsList_DragEnter($source, $eventArgs)];
                                                           [Event Drop] = [Action ProductsList_Drop($source, $eventArgs)];
                                                           [Event MouseMove] = [Action ProductsList_MouseMove($source, $eventArgs)];
                                                           [Event TouchDown] = [Action ProductsList_TouchDown($source, $eventArgs)];"
                                                 Tag="{Binding ClipboardProduct}"
                                                 DockPanel.Dock="Top">
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="ListBoxItem">
                                                    <Setter Property="Padding" Value="0" />
                                                    <Setter Property="Margin" Value="0" />
                                                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                            <ListBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel />
                                                </ItemsPanelTemplate>
                                            </ListBox.ItemsPanel>
                                        </ListBox>

                                    </DockPanel>
                                </ScrollViewer>
                                <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled"
                                              VerticalScrollBarVisibility="Disabled" Margin="1 10 0 0">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <ListBox DockPanel.Dock="Left" x:Name="CategoryList" AllowDrop="True"
                                                 ItemsSource="{Binding CurrentCategories}"
                                                 SelectedItem="{Binding SelectedCategory}"
                                                 Margin="5"
                                                 caliburn:Message.Attach="
                                         [Event MouseMove] = [Action CategoriesList_MouseMove($source, $eventArgs)];
                                         [Event Drop] = [Action CategoriesList_Drop($source, $eventArgs)];
                                                 [Event TouchDown] = [Action CategoriesList_TouchDown($source, $eventArgs)];">
                                            <ListBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <UniformGrid Columns="{x:Static helpers:ProductLayout.Cols}" />
                                                </ItemsPanelTemplate>
                                            </ListBox.ItemsPanel>
                                            <ListBox.ItemTemplate>
                                                <DataTemplate DataType="{x:Type models:Category}">
                                                    <Border x:Name="catBtn" Height="45" Padding="2" Margin="2"
                                                            cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox, AncestorLevel=1}}"
                                                            caliburn:Message.Attach="
                                                    [Event MouseLeftButtonUp] = [Action ShowCategoryProducts($this)]"
                                                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Setter Property="Background"
                                                                        Value="{Binding Background,UpdateSourceTrigger=PropertyChanged}" />
                                                                <!--<Style.Triggers>
                                                            <DataTrigger x:Uid="DataTrigger_2" Binding="{Binding Id}" Value="{x:Null}">
                                                                <Setter  x:Uid="Setter_19" Property="Background">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush x:Uid="SolidColorBrush_1" Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>-->
                                                            </Style>
                                                        </Border.Style>
                                                        <TextBlock FontWeight="Bold" FontSize="16"
                                                                   Text="{Binding Name}"
                                                                   HorizontalAlignment="Center"
                                                                   VerticalAlignment="Center"
                                                                   ToolTip="{Binding Description}">
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsDark}"
                                                                            Value="True">
                                                                            <Setter Property="Foreground" Value="White" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </Border>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="ListBoxItem">
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                    <Setter Property="Padding" Value="0" />
                                                    <Setter Property="Margin" Value="0" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Background" Value="Aqua" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                        </ListBox>

                                        <materialdesign:ColorZone Mode="PrimaryMid" Grid.Row="3" Padding="16">
                                            <TextBlock VerticalAlignment="Center" FontSize="16">Gestion Du Menu Categories</TextBlock>
                                        </materialdesign:ColorZone>

                                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                VerticalAlignment="Bottom" HorizontalAlignment="Right" Grid.Row="2"
                                                Margin="0 0 10 -20"
                                                caliburn:Message.Attach="[Event Click] = [Action CreateCategory()]">
                                            <materialdesign:PackIcon Kind="Plus" Height="22" Width="22" />
                                        </Button>

                                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                VerticalAlignment="Bottom" HorizontalAlignment="Right" Grid.Row="2"
                                                Margin="0 0 60 -20"
                                                caliburn:Message.Attach="[Event Click] = [Action EditCategory(false)]">
                                            <materialdesign:PackIcon Kind="Edit" Height="22" Width="22" />
                                        </Button>

                                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                                caliburn:Message.Attach="[Event Click] = [Action RemoveCategoryFromList()]"
                                                Grid.Row="2" Margin="0 0 110 -20">
                                            <materialdesign:PackIcon Kind="Delete" Height="22" Width="22" />
                                        </Button>


                                    </Grid>
                                </ScrollViewer>

                            </Grid>

                        </materialdesign:Flipper.FrontContent>
                        <materialdesign:Flipper.BackContent>
                            <Border BorderThickness="1" Margin="10" BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                                    ClipToBounds="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>

                                    <subViews:ProductEditView Grid.Row="0"
                                                              DataContext="{Binding EditProductViewModel }" />

                                    <Grid Grid.Row="0"
                                          Visibility="{Binding IsCategory,Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <subViews:CategoryEditView Grid.Row="0" Background="White"

                                                                   DataContext="{Binding EditCategoryViewModel}" />
                                    </Grid>


                                    <materialdesign:ColorZone Background="#FFAEEA00" Padding="6" Grid.Row="1"
                                                              Margin="1">
                                        <StackPanel Orientation="Horizontal">
                                            <Button
                                                Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                caliburn:Message.Attach="[Event Click] = [Action Save()]"
                                                IsEnabled="{Binding IsSaveEnabled}">
                                                <StackPanel Orientation="Horizontal">
                                                    <materialdesign:PackIcon Kind="ContentSave"
                                                                             HorizontalAlignment="Right" Width="25"
                                                                             Height="25" />
                                                </StackPanel>
                                            </Button>
                                            <Button
                                                Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                caliburn:Message.Attach="[Event Click] = [Action Cancel()]" Margin="10">
                                                <StackPanel Orientation="Horizontal">
                                                    <materialdesign:PackIcon Kind="CloseBox"
                                                                             HorizontalAlignment="Right" Width="25"
                                                                             Height="25" />
                                                </StackPanel>
                                            </Button>
                                            <TextBlock Text="Product Details" FontSize="24" Margin="10"
                                                       FontWeight="DemiBold" />
                                        </StackPanel>
                                    </materialdesign:ColorZone>

                                </Grid>
                            </Border>
                        </materialdesign:Flipper.BackContent>
                    </materialdesign:Flipper>
                </ScrollViewer>


            </Grid>

        </Grid>
    </materialdesign:DialogHost>

</UserControl>