<UserControl x:Class="FastPosFrontend.Views.SubViews.WaitingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:subvm="clr-namespace:FastPosFrontend.ViewModels.SubViewModel"
             xmlns:model="clr-namespace:ServiceInterface.Model;assembly=ServiceInterface"
             xmlns:sview="clr-namespace:FastPosFrontend.Views.SubViews"
             xmlns:view="clr-namespace:FastPosFrontend.Views"
             xmlns:convert="clr-namespace:FastPosFrontend.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:caliburn="http://www.caliburnproject.org"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <convert:MultiValueEqualityConverter x:Key="MultiValueEqualityConverter"/>
    </UserControl.Resources>
    <Grid>
        
            <ListBox x:Name="OrdersList" ItemsSource="{Binding Orders}" 
                 SelectedItem="{Binding SelectedOrder}"
                 Background="#FFDDDDDD"   
                 HorizontalContentAlignment="Left"
                 ScrollViewer.VerticalScrollBarVisibility="Visible"
                 >
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type model:Order}">
                    <Grid caliburn:Message.Attach="[Event MouseLeftButtonUp] = [Action ShowOrder($this)]">

                        <Grid.ContextMenu>
                            <ContextMenu Padding="0" >
                                <MenuItem 
                                    Header="Lock"  Margin="0"
                                    DataContext="{Binding RelativeSource={RelativeSource AncestorType=view:CheckoutView},Path=DataContext}"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=view:CheckoutView},Path=DataContext.OrderLockCommand}"
                                    CommandParameter="{x:Null}"/>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        
                        <Border  >
                            <Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition Width="42"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <Border Margin="0 0 3 0" Background="#895737">
                                        <DockPanel LastChildFill="True" >
                                            <materialDesign:PackIcon DockPanel.Dock="Left" Foreground="White" Kind="TicketConfirmation"/>
                                            <Label DockPanel.Dock="Right" Grid.Column="1" Padding="0" Margin="0 -1 3 0"
                                       Content="{Binding OrderNumber}" 
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Top"
                                       Foreground="White"
                                       FontSize="16" FontWeight="Bold"/>
                                        </DockPanel>
                                    </Border>

                                    <Border Margin="0 " Grid.Column="1"  Background="#895737">
                                        <DockPanel LastChildFill="True" >
                                            <materialDesign:PackIcon Grid.Column="2" Foreground="White" 
                                                             
                                                             Kind="Schedule"/>
                                            <Label Grid.Column="3"  Padding="0" Margin="0 0 0 0"
                                           Content="{Binding ElapsedTime.Minutes}" 
                                           Foreground="White"
                                           HorizontalAlignment="Right"
                                           FontSize="16" FontWeight="Bold"/>
                                        </DockPanel>
                                    </Border>

                                    <Border Margin="0 3" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2"  Background="#895737">
                                        <DockPanel LastChildFill="True" >
                                            <materialDesign:PackIcon Grid.Column="0" Grid.Row="1" Foreground="White" Kind="Dollar"/>
                                            <Label Grid.Column="3" Grid.Row="1"  Padding="0" Margin="0 -1 0 0"
                                           Content="{Binding NewTotal}" 
                                           Foreground="White"
                                           HorizontalAlignment="Right"
                                           FontSize="16" FontWeight="Bold"/>
                                        </DockPanel>
                                    </Border>

                                    <!--<Border Grid.Column="0" Grid.Row="2" Height="35" Width="40" Background="{StaticResource DefaultBackgroundBrush}"
                                    BorderBrush="WhiteSmoke" BorderThickness="0"
                                    caliburn:Message.Attach="[Event MouseLeftButtonUp] = [Action ActionKeyboard('SERVED')]">
                                <materialDesign:PackIcon Grid.Column="0" Grid.Row="1" Foreground="White" Kind="FastFood"
                                                         Height="30" Width="30" HorizontalAlignment="Center"/>
                            </Border>
                            <Border Grid.Column="1" Grid.Row="2" Height="35" Width="40" Background="{StaticResource DefaultBackgroundBrush}"
                                    BorderBrush="WhiteSmoke" BorderThickness="0">
                                <materialDesign:PackIcon Grid.Column="0" Grid.Row="1" Foreground="White" Kind="Eye"
                                                         Height="30" Width="30" HorizontalAlignment="Center"/>
                            </Border>-->
                                </Grid>
                            </Grid>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="#c9ada7"/>
                                    <Setter Property="Background" Value="{Binding State, Converter={StaticResource OrderStateEnumToBrush}}"/>
                                    <Setter Property="BorderThickness" Value="3"/>
                                    <Setter Property="CornerRadius" Value="10"/>
                                    <Setter Property="Padding" Value="6"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource MultiValueEqualityConverter}">
                                                    <Binding RelativeSource="{RelativeSource self}" Path="DataContext"/>
                                                    <Binding ElementName="OrdersList" Path="SelectedItem"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <!--Binding="{Binding ElementName=ordersList, Path=SelectedItem}" Value="{Binding}">-->
                                            <Setter Property="BorderThickness" Value="3"></Setter>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}"/>
                                        </DataTrigger>
                                      

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" Value="true" />
                                                <Condition Binding="{Binding IsLocked}" Value="true"></Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}"/>
                                        </MultiDataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" Value="false" />
                                                <Condition Binding="{Binding IsLocked}" Value="true"></Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <!--<TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=view:CheckoutView},Path=DataContext}"/>-->

                        <Border Background="#7F000000" HorizontalAlignment="Stretch" CornerRadius="10" Margin="3">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLocked}" Value="false">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>

                                        
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                           
                            <Label Content="{materialDesign:PackIcon Kind=Lock,Size=45}" HorizontalAlignment="Center" >
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Foreground" Value="LightGray" ></Setter>
                                        <Style.Triggers>

                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" Value="true">
                                                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </Border>

                        <!--<materialDesign:PopupBox HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 -10 -10 0">
                            <StackPanel>
                                <Button>Lock</Button>
                            </StackPanel>
                        </materialDesign:PopupBox>-->
                    </Grid>
                </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        
    </Grid>
</UserControl>
