<UserControl x:Class="FastPosFrontend.Views.CheckoutView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:caliburn="http://www.caliburnproject.org"
             xmlns:materialdesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:models="clr-namespace:ServiceInterface.Model;assembly=ServiceInterface"
             xmlns:views="clr-namespace:FastPosFrontend.Views"
             xmlns:vm="clr-namespace:FastPosFrontend.ViewModels"
             xmlns:subviews="clr-namespace:FastPosFrontend.Views.SubViews"
             xmlns:svm="clr-namespace:FastPosFrontend.ViewModels.SubViewModel"
             xmlns:extensions="clr-namespace:FastPosFrontend.Extensions"
             xmlns:helpers="clr-namespace:FastPosFrontend.Helpers"
             xmlns:convert="clr-namespace:FastPosFrontend.Converters"
             xmlns:comp="clr-namespace:FastPosFrontend.Views.Components"
             xmlns:subViews="clr-namespace:FastPosFrontend.Views.SubViews"
             Background="{StaticResource MaterialDesignPaper}"
             x:Name="CheckoutViewUserControl"
             mc:Ignorable="d"
             d:DesignWidth="900"
             caliburn:Message.Attach="[Event PreviewTextInput] = [Action ScanCodeBar($source, $eventArgs)];[Event KeyUp] = [Action DoneScan($source, $eventArgs)]"
             d:DataContext="{d:DesignInstance vm:CheckoutViewModel}">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <DataTemplate DataType="{x:Type vm:SplitViewModel}">
                <views:SplitView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:TablesViewModel}" x:Key="tableFullView">
                <views:TablesView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:TablesViewModel}" x:Key="tableButtomView">
                <subViews:TableButtomView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type svm:DeliveryViewModel}">
                <subViews:DelivereyView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type svm:WaitingViewModel}">
                <subViews:WaitingView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type svm:TakeawayViewModel}">
                <subViews:TakeAwayView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type svm:WarningViewModel}">
                <subViews:WarningView />
            </DataTemplate>

            <helpers:TableViewTemplateSelector x:Key="tableViewSelector"
                                               TableFullView="{StaticResource tableFullView}"
                                               TableButtomView="{StaticResource tableButtomView}" />
            
            <convert:ListKindToVisibilityConverter x:Key="listKindToVisibilityConverter" />
           
            
        </ResourceDictionary>
    </FrameworkElement.Resources>

    <materialdesign:DialogHost IsOpen="{Binding IsDialogOpen ,FallbackValue='False'}"
                               caliburn:Message.Attach="[Event DialogClosing] = [Action DialogClosing()]">
        <materialdesign:DialogHost.DialogContent>
            <ContentControl Content="{Binding DialogViewModel}"
                            ContentTemplateSelector="{StaticResource tableViewSelector}" />
        </materialdesign:DialogHost.DialogContent>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>

                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="25" />
            </Grid.RowDefinitions>

            <!--OrderItemList and Order Item Commands-->
            <Grid Grid.Column="0" Grid.Row="0" Margin="0 0 8 0">
                <Grid.ColumnDefinitions>


                    <ColumnDefinition Width="58" />
                    <ColumnDefinition Width="*" />

                </Grid.ColumnDefinitions>

                <ListBox Name="OrderitemsList" Grid.Column="1" Width="365"
                         ItemsSource="{Binding OrderItemsCollectionViewSource.View}"
                         SelectedItem="{Binding Path=CurrentOrder.SelectedOrderItem, Mode=TwoWay}"
                         ItemContainerStyle="{StaticResource OrderItems_ItemStyle}"
                         HorizontalContentAlignment="Stretch"
                         AlternationCount="2"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         ScrollViewer.VerticalScrollBarVisibility="Disabled">
                    <ListBox.Style>
                        <Style TargetType="ListBox">
                            <Setter Property="Background" Value="#bfdbf7" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=OrderitemsList, Path=ItemsSource}"
                                             Value="{x:Null}">
                                    <Setter Property="Background" Value="White" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Style>
                </ListBox>


                <!--OrderItem Commands-->
                <comp:OrderItemToolbar Grid.Column="0" Grid.Row="0" />

            </Grid>

            <materialdesign:DrawerHost Panel.ZIndex="10" IsTopDrawerOpen="{Binding IsTopDrawerOpen}" Grid.Column="0"
                                       Grid.Row="0" Grid.RowSpan="3">
                <!--Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type materialdesign:DrawerHost}},Path=ActualHeight}"-->
                <materialdesign:DrawerHost.TopDrawerContent>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <ListBox Grid.Row="0" x:Name="ltab"
                                 ItemsSource="{Binding Tables}" SelectedItem="{Binding SelectedTable,Mode=TwoWay}"
                                 Visibility="{Binding ListKind, Converter={StaticResource listKindToVisibilityConverter}, ConverterParameter=tab}"
                                 VerticalAlignment="Top">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:Table}">
                                    <RadioButton Content="{Binding Number}" GroupName="groupName" FontSize="20"
                                                 FontWeight="Bold"
                                                 IsChecked="{Binding Path=IsSelected, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                                 Style="{StaticResource ButtonTopOrderTable}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="5" VerticalAlignment="Center" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>

                        <ListBox Grid.Row="0" x:Name="lwaiter"
                                 ItemsSource="{Binding Waiters}" SelectedItem="{Binding SelectedWaiter, Mode=TwoWay}"
                                 Visibility="{Binding ListKind, Converter={StaticResource listKindToVisibilityConverter}, ConverterParameter=waiter}">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:Waiter}">
                                    <Button Width="120" Height="70"
                                            caliburn:Message.Attach="[Event Click] = [Action SelectWaiter($this)]"
                                            Style="{StaticResource ButtonTopOrderDelivereyman}"
                                            Background="{Binding Background}">
                                        <DockPanel>
                                            <!--<materialdesign:PackIcon DockPanel.Dock="Left" Kind="TruckFast" Width="20" Height="20"/>-->
                                            <TextBlock DockPanel.Dock="Top" Text="{Binding Name}"
                                                       TextWrapping="WrapWithOverflow" FontWeight="DemiBold" />
                                            <materialdesign:PackIcon DockPanel.Dock="Left" Kind="Phone" />
                                            <TextBlock DockPanel.Dock="Left" Text="{Binding PhoneNumbers[0]}" />
                                        </DockPanel>
                                    </Button>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="Padding" Value="2" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>

                        <ListBox Grid.Row="0" Grid.RowSpan="2" x:Name="ldelivrey"
                                 ItemsSource="{Binding Delivereymen}"
                                 SelectedItem="{Binding SelectedDeliveryman, Mode=TwoWay}"
                                 Visibility="{Binding ListKind, Converter={StaticResource listKindToVisibilityConverter} , ConverterParameter=delivrey}">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:Deliveryman}">
                                    <Button Width="120" Height="70"
                                            caliburn:Message.Attach="[Event Click] = [Action SelectDeliveryMan($this)]"
                                            Style="{StaticResource ButtonTopOrderDelivereyman}"
                                            Background="{Binding Background}">
                                        <DockPanel>
                                            <TextBlock DockPanel.Dock="Top" Text="{Binding Name}"
                                                       TextWrapping="WrapWithOverflow" FontWeight="DemiBold" />
                                            <materialdesign:PackIcon DockPanel.Dock="Left" Kind="Phone" Width="20"
                                                                     Height="20" VerticalAlignment="Center" />
                                            <TextBlock DockPanel.Dock="Bottom" Text="{Binding PhoneNumbers[0]}" />
                                        </DockPanel>
                                    </Button>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="Padding" Value="2" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>

                        <views:CustomerView x:Name="lcustomer" caliburn:View.Model="{Binding CustomerViewModel}"
                                            Grid.Row="0"
                                            Visibility="{Binding ListKind, Converter={StaticResource listKindToVisibilityConverter}, ConverterParameter=customer}" />


                        <Button Grid.Row="1" Command="{x:Static materialdesign:DrawerHost.CloseDrawerCommand}"
                                CommandParameter="{x:Static Dock.Top}"
                                Style="{DynamicResource MaterialDesignFlatButton}"
                                caliburn:Message.Attach="[Event Click] = [Action CloseDrawer()]"
                                Margin="10" VerticalAlignment="Center" Content="CLOSE" />

                    </Grid>
                </materialdesign:DrawerHost.TopDrawerContent>
            </materialdesign:DrawerHost>
            <!--Numeric Zone & Order Keypad and Commands-->
            <Grid Grid.Column="0" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!--Numeric Zone-->
                <Grid Grid.Column="0" Grid.Row="0" Margin="2" x:Name="NumericZoneGrid">

                    <Border Grid.Row="0" BorderBrush="Black" BorderThickness="1">
                        <Border BorderBrush="White" BorderThickness="2" Background="Black">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="3*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="2*" />
                                </Grid.RowDefinitions>
                                <TextBox Grid.Row="0" Grid.Column="1" Visibility="Hidden" IsReadOnly="True" />
                                <Border Grid.Row="1" Grid.Column="1" BorderThickness="0 0 0 0"
                                        BorderBrush="CornflowerBlue">
                                    <TextBlock Foreground="#26ff26"
                                               Text="{Binding NumericZone, StringFormat='{}{0:0,0.00}'}"
                                               FontSize="45" FontFamily="{StaticResource DigitalFontFamily}"
                                               HorizontalAlignment="Right">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ReturnedAmount}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Border>


                                <Grid Grid.RowSpan="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Button
                                        HorizontalContentAlignment="Stretch"
                                        caliburn:Message.Attach="[Event Click] = [Action ActionKeyboard('CopyToNumericZone')]">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border Background="Transparent">
                                                                <ContentPresenter />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                        <DockPanel>
                                            <materialdesign:PackIcon Kind="Dollar" Width="40" Height="40" Padding="0"
                                                                     Foreground="#26ff26" />
                                            <TextBlock Foreground="#26ff26" TextAlignment="Right"
                                                       FontFamily="{StaticResource DigitalFontFamily}"
                                                       FontSize="32" Padding="0 5 0 0"
                                                       Text="{Binding CurrentOrder.NewTotal, StringFormat='{}{0:#,0.00}', Mode=OneWay}"
                                                       caliburn:Message.Attach="[Event MouseLeftButtonDown] = [Action NewTotalToNumericZone()]"
                                                       x:Name="NewTotalTextBlock" />
                                        </DockPanel>
                                    </Button>
                                    <DockPanel Grid.Row="2" Grid.Column="2">
                                        <materialdesign:PackIcon Kind="TagMinus" DockPanel.Dock="Left" Width="30"
                                                                 Height="30" Padding="0" Foreground="#26ff26" />
                                        <TextBlock Foreground="#26ff26" FontSize="28" DockPanel.Dock="Right"
                                                   TextAlignment="Right"
                                                   FontFamily="{StaticResource DigitalFontFamily}"
                                                   Text="{Binding CurrentOrder.TotalDiscountAmount, StringFormat='{}{0:#,0.00}', Mode=OneWay}"
                                                   x:Name="TotalDiscountAmountTextBlock" />
                                    </DockPanel>
                                </Grid>
                            </Grid>


                        </Border>
                    </Border>


                </Grid>

                <!--Order Keypad and Commands-->
                <comp:OrderCommandsControl Grid.Row="1" />


            </Grid>

            <!--ProductNavigation-->
            <subViews:ProductNavigation Grid.Column="1" Grid.Row="0" />

            <Grid Grid.Column="1" Grid.Row="1" Margin="2" Grid.RowSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />

                </Grid.RowDefinitions>

                <!--CATEGORY NAVIGATION-->
                <comp:CategoryPaginationControl />

                <!--ORDER NAVIGATION-->

                <comp:OrderTabinationView Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" />


            </Grid>


        </Grid>

    </materialdesign:DialogHost>

</UserControl>