<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:model="clr-namespace:ServiceInterface.Model;assembly=ServiceInterface"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:vm="clr-namespace:FastPosFrontend.ViewModels"
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:ex="clr-namespace:FastPosFrontend.Extensions" 
                    xmlns:converters="clr-namespace:FastPosFrontend.Converters">

    <converters:OrderTypeToPackIconKindConverter x:Key="OrderTypeToPackIconKindConverter"/>

    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignToolButton}" x:Key="AppBarButton">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <!--<Setter Property="Margin" Value="3"/>-->
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
    </Style>
    <converters:OrderNumerationMaskConverter x:Key="OrderNumerationMaskConverter"/>
    <converters:NegateBooleanValueConverter x:Key="NegateBooleanValueConverter"></converters:NegateBooleanValueConverter>
    <DataTemplate x:Key="CheckoutStatusBar" DataType="vm:CheckoutViewModel">


        <StackPanel Orientation="Horizontal" >
            <StackPanel.Resources>
                <Style TargetType="md:Chip">
                    <Setter Property="Height" Value="50"></Setter>
                    <Setter Property="FontWeight" Value="Bold"></Setter>
                    <Setter Property="Foreground" Value="White"></Setter>
                    <Setter Property="Margin" Value="0 0 5 0"></Setter>
                    <Setter Property="IconBackground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                    <Setter Property="IconForeground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=Content}" Value="{x:Null}">
                            <Setter Property="IconBackground" Value="DarkGray"/>
                            <Setter Property="IconForeground" Value="LightGray"/>
                            <Setter Property="IsDeletable" Value="False"/>

                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>

           

            <StackPanel Orientation="Horizontal">
                <!--<Button Style="{StaticResource MaterialDesignIconForegroundButton}"
                        Content="{md:PackIcon Kind=ChevronLeft}"/>-->
                <md:PopupBox StaysOpen="True"  PlacementMode="BottomAndAlignCentres" >
                    <md:PopupBox.ToggleContent>
                        <md:Chip
                Margin="3 0"
                ToolTip="رقم الطلب"
                Icon="{md:PackIcon Kind=HashtagBox}"
               IsHitTestVisible="False"
                            MinWidth="130">
                            <md:Chip.Content>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{} {0:#} ( {1:#} )" FallbackValue="SELECT">
                                            <Binding Path="CurrentOrder.OrderNumber" />
                                            <Binding Path="CurrentOrder.OrderCode"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <!--<Binding Path="CurrentOrder.OrderNumber" Converter="{StaticResource OrderNumerationMaskConverter}"/>-->
                            </md:Chip.Content>
                        </md:Chip>
                    </md:PopupBox.ToggleContent>
                    <StackPanel>
                        <ListBox 
                            ItemsSource="{Binding OrdersCollectionViewSource.View}" 
                            SelectedItem="{Binding CurrentOrder}"
                            Width="300"
                            Height="410"
                            ScrollViewer.VerticalScrollBarVisibility="Hidden">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignCardsListBoxItem}">
                                    <Setter Property="Margin" Value="10 4"/>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="FontWeight" Value="DemiBold"/>
                                    <Setter Property="Foreground" Value="#DF000000"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource SecondaryHueDarkBrush}"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type model:Order}">
                                    <Grid Margin="10" >
                                        <Grid.ColumnDefinitions>

                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>
                                 
                                        <Grid.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="FontSize" Value="15"/>
                                                
                                                <!--<Setter Property="Margin" Value="4 0 0 0"/>-->
                                            </Style>
                                        </Grid.Resources>
                                        <md:PackIcon Grid.Column="0" Kind="{Binding Type,Converter={StaticResource OrderTypeToPackIconKindConverter}}" Width="40" Height="40"  />
                                        <TextBlock Grid.Column="1" Text="{Binding OrderCode,FallbackValue=NEW}" />
                                        <TextBlock Grid.Column="2" Text="{Binding OrderTime,StringFormat='H:mm:ss'}"/>
                                        <TextBlock Grid.Column="3" Text="{Binding NewTotal,StringFormat='C',ConverterCulture='en-DZ'}"/>
                                     
                                        
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </md:PopupBox>

                <!--<Button Style="{StaticResource MaterialDesignIconForegroundButton}"
                        Content="{md:PackIcon Kind=ChevronRight}"
                        cal:Message.Attach="[Event Click] = [Action SetOrderPropToNull('Customer')]"/>-->
            </StackPanel>
         



            <md:Chip
                Content="{Binding CurrentOrder.Customer.Name}"
                ToolTip="الزبون"
                Icon="{md:PackIcon User}"


            cal:Message.Attach="[Event Click] = [Action SetOrderPropToNull('Customer')]"/>

           
            <md:Chip
                Content="{Binding CurrentOrder.Table.Number}"
                ToolTip="الطاولة"
                Icon="{md:PackIcon TableFurniture}"
                
               
            cal:Message.Attach="[Event Click] = [Action SetOrderPropToNull('Table')]"/> 
                
                     <!--cal:Message.Attach="[Event Click] = [ Action ShowDrawer('Table')]"/>-->
            <md:Chip
                    
                Content="{Binding CurrentOrder.Waiter.Name}"
                ToolTip="النادل"
                Icon="{md:PackIcon Kind=RoomService}"
                

            cal:Message.Attach="[Event Click] = [Action SetOrderPropToNull('Waiter')]"/> 
                <!--cal:Message.Attach="[Event Click] = [ Action ShowDrawer('Waiter')]"/>-->

                <md:Chip
                Content="{Binding CurrentOrder.Deliveryman.Name}"
                ToolTip="مندوب التوصيل"
                Icon="{md:PackIcon TruckFast}"
                
            cal:Message.Attach="[Event Click] = [Action SetOrderPropToNull('Deliveryman')]"/>
            <!--cal:Message.Attach="[Event Click] = [ Action ShowDrawer('Delivery')]"/>-->

        </StackPanel>


    </DataTemplate>

    <DataTemplate x:Key="UserLoginBarDataTemplate" DataType="vm:LoginViewModel">
        <Grid Width="350" TextElement.FontSize="16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto"  />

            </Grid.ColumnDefinitions>

            <ComboBox Grid.Column="0" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                      ItemsSource="{Binding Users}"
                      md:HintAssist.Hint="Username"
                      VerticalAlignment="Bottom" Margin="20 0"
                      x:Name="UsersComboBox"
                      SelectedItem="{Binding SelectedUser}"
                      IsEditable="True"
                      Text="{Binding Username,UpdateSourceTrigger=PropertyChanged}"
                      TextSearch.TextPath="Username">
                <ComboBox.ItemTemplate>
                    <DataTemplate DataType="model:User">
                        <StackPanel Orientation="Horizontal">
                            <md:PackIcon Kind="AccountCircle"
                                         Foreground="{Binding Background}"
                                         Width="20" Height="20" VerticalAlignment="Center" Margin="5 0" />
                            <TextBlock Text="{Binding Username}" VerticalAlignment="Center" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <md:TransitioningContent OpeningEffect="{md:TransitionEffect SlideInFromBottom}" Grid.Column="1"
                                     Visibility="{Binding 
                ElementName=UsersComboBox,
                Path=Text,
                Converter={StaticResource ObjectToVisibility}}"
                                     Margin="0 0 5 0">
                <PasswordBox Grid.Column="1" Style="{StaticResource MaterialDesignFloatingHintPasswordBox}"
                         md:HintAssist.Hint="Password" VerticalAlignment="Bottom"
                         Visibility="{Binding ElementName=UsersComboBox,Path=IsMouseOver}"/>
            </md:TransitioningContent>
            <Button Grid.Column="2" Style="{StaticResource MaterialDesignFlatButton}" Content="LOGIN" VerticalAlignment="Bottom" VerticalContentAlignment="Center"></Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CheckoutLeftCommandBar" >
        <StackPanel Orientation="Horizontal">
            <Button Content="{md:PackIcon Kind=NewBox,Size=40}" cal:Message.Attach="[Event Click] = [ Action NewOrder()]" Style="{StaticResource AppBarButton}"/>

            <UniformGrid Rows="1" IsEnabled="{Binding CurrentOrder.IsModifiable}">
                <Panel.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource AppBarButton}">
                       
                    </Style>
                </Panel.Resources>
                <Button Content="{md:PackIcon Kind=TableFurniture,Size=40}" cal:Message.Attach="[Event Click] = [ Action ShowDrawer('Table')]" />
                <Button Content="{md:PackIcon Kind=RoomService,Size=40}" cal:Message.Attach="[Event Click] = [ Action ShowDrawer('Waiter')]" />
                <Button Content="{md:PackIcon Kind=TruckFast,Size=40}" cal:Message.Attach="[Event Click] = [ Action ShowDrawer('Delivery')]" />
                <Button Content="{md:PackIcon Kind=Account,Size=40}" cal:Message.Attach="[Event Click] = [ Action ShowDrawer('Customer')]" />
            </UniformGrid>

           
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DailyExpenseReportRightCommandBar">
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
            <Panel.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource AppBarButton}" />
            </Panel.Resources>
            <StackPanel Orientation="Horizontal">

                <StackPanel.Triggers>
                    <EventTrigger RoutedEvent="Button.Click" SourceName="SearchButton">
                        <!--<BeginStoryboard>
                            <Storyboard >
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchBoxContainer" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                               
                            </Storyboard>
                        </BeginStoryboard>-->
                        <BeginStoryboard>
                            <Storyboard >
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchBox" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimation Duration="0:0:0.5" From="0" To="150" Storyboard.TargetName="SearchBox" Storyboard.TargetProperty="Width" >
                                    <DoubleAnimation.EasingFunction>
                                        <PowerEase Power="3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>

                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>

                    <EventTrigger RoutedEvent="TextBox.LostFocus" SourceName="SearchBox">
                        <BeginStoryboard>
                            
                            <Storyboard  >
                                <DoubleAnimation Duration="0:0:0.5" From="150" To="0" Storyboard.TargetName="SearchBox" Storyboard.TargetProperty="Width" >
                                    <DoubleAnimation.EasingFunction>
                                        <PowerEase Power="3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>

                                </DoubleAnimation>
                                <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchBox" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}" />
                                </ObjectAnimationUsingKeyFrames>-->
                            </Storyboard>
                            
                        </BeginStoryboard>
                    </EventTrigger>
                </StackPanel.Triggers>

                <Button  Content="{md:PackIcon Kind=Magnify,Size=30}" x:Name="SearchButton"
                         ex:EventFocusAttachment.ElementToFocus="{Binding ElementName=SearchBox}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource AppBarButton}" TargetType="Button">
                         
                        </Style>
                    </Button.Style>
                </Button>
                <!--<md:TransitioningContent OpeningEffect="{md:TransitionEffect Kind=ExpandIn}" x:Name="SearchBoxContainer" Visibility="Collapsed">
                   
                </md:TransitioningContent>-->

                <TextBox  Background="WhiteSmoke" Width="150" MaxWidth="150" Opacity="0.7" x:Name="SearchBox" 
                              md:TextFieldAssist.TextFieldCornerRadius="7"
                              Text="{Binding UserSearchQuery,UpdateSourceTrigger=PropertyChanged}"
                              md:HintAssist.Hint="Search by Date"
                              md:TextFieldAssist.DecorationVisibility="Hidden"
                              VerticalAlignment="Stretch"
                              VerticalContentAlignment="Center"
                              Padding="10"
                          Visibility="Collapsed">
                   

                </TextBox>



            </StackPanel>
            <UniformGrid Rows="1">


                <Button Content="{md:PackIcon Kind=Printer,Size=30}"
                        cal:Message.Attach="[Event Click] = [Action PrintReport]"/>
                <!--IsEnabled="{Binding CanAddOrRefreshReportProperty}"-->
                <!--<Button cal:Message.Attach="[Event Click] = [Action GenerateReport]" >
                    <Button.Style>
                        <Style BasedOn="{StaticResource AppBarButton}"  TargetType="Button">
                      
                            <Setter Property="Content" Value="{md:PackIcon Kind=Plus,Size=30}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsReportGenerated}" Value="true">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                              
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>-->

                <Button cal:Message.Attach="[Event Click] = [Action ReloadReport]" >
                    <Button.Style>
                        <Style BasedOn="{StaticResource AppBarButton}"  TargetType="Button">

                            <Setter Property="Content" Value="{md:PackIcon Kind=Refresh,Size=30}"/>
                           
                        </Style>
                    </Button.Style>
                </Button>
            </UniformGrid>
        </StackPanel>
    </DataTemplate>

</ResourceDictionary>